name: release-android

on:
  push:
    tags:
      - "v*"          # z.B. v1.2.3

permissions:
  contents: write

jobs:
  build-sign:
    name: Build & Sign Android (Vue + Capacitor)
    runs-on: ubuntu-latest

    env:
      NODE_VERSION: "24"
      JAVA_VERSION: "21"
      WORKING_DIRECTORY: "."

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm ci

      - name: Build web (Vue)
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run build

      - name: Install Capacitor CLI
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm i -D @capacitor/cli

      - name: Sync Capacitor → Android
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npx cap sync android

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}
          cache: "gradle"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses

      - name: Build AAB & APK (Gradle)
        working-directory: android
        run: |
          ./gradlew clean \
            :app:bundleRelease \
            :app:assembleRelease

      - name: Collect release files (unsigned)
        run: |
          mkdir -p unsigned
          find android/app/build/outputs -type f \( -name "*.apk" -o -name "*.aab" \) -print -exec cp {} unsigned/ \;
          echo "== unsigned =="
          ls -l unsigned || true

      - name: Sign release artifacts
        id: sign
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: unsigned
          signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: Normalize signed filenames
        run: |
          set -euo pipefail
          APK=$(ls unsigned/*-signed.apk 2>/dev/null | head -n1 || true)
          if [ -n "${APK:-}" ]; then
            mv -f "$APK" unsigned/app-release.apk
          fi
          AAB=$(ls unsigned/*.aab 2>/dev/null | head -n1 || true)
          if [ -n "${AAB:-}" ] && [ "$(basename "$AAB")" != "app-release.aab" ]; then
            mv -f "$AAB" unsigned/app-release.aab
          fi
          echo "== unsigned (normalized) =="
          ls -l unsigned

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-release
          path: |
            unsigned/app-release.aab
            unsigned/app-release.apk
          if-no-files-found: error

  github-release:
    name: Create GitHub Release
    needs: build-sign
    runs-on: ubuntu-latest

    steps:
      - name: Download signed artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-release
          path: dist

      - name: Generate release notes
        run: |
          echo "## Änderungen" > RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "- Automatisches Release für $GITHUB_REF_NAME" >> RELEASE_NOTES.md

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body_path: RELEASE_NOTES.md
          files: |
            dist/app-release.aab
            dist/app-release.apk
          draft: false
          prerelease: ${{ contains(github.ref_name, '-rc') || contains(github.ref_name, '-beta') || contains(github.ref_name, '-alpha') }}
